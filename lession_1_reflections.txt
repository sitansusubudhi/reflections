Viewing a diff between two versions of a file 
clearly works like the ones I have seen in GitHub.
I would certainly be very impressed if I could such
changes in a way to visualise.

How could having easy access to the entire history 
of a file make you a more efficient programmer in 
the long term?

Learning about the error that we made in the 
new version of the file helps us in increasing 
our efficiency in the future.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google docs does?

Pros - Flexibility- Gives user the choice
Cons - In case the user forgets to commit for a long time, the code 
might not be something easy to understand later.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

It gives the user the freedom to choose when to commit.

How can you use the commands git log and git diff to view the history of files?

cd to the cloned directory, then type git log,
after getting the required message with revert controls, 
copy its commit id, and its below commit id, then use the 
command git diff 1st_commit_id 2nd_commit_id.

How might using version control make you more confident to make changes that could break something?

Having seen through my eyes, that even though not writing any code to move back and forth between versions of a repository to see its previous version, has made me confident to make changes that could break something.

Now that you have your workspace set up, what do you want to try using Git for?

Want to use it most for experiencing the last 2 years of my college  life. :D